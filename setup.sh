#!/bin/bash
# Cisco Configuration Manager - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è Linux/macOS

echo "üîß Cisco Configuration Manager - –£—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo "=========================================="

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
cd "$(dirname "$0")"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    OS="Linux"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    OS="macOS"
else
    OS="Unix/Other"
fi

echo "üñ•Ô∏è  –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $OS"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
if command -v python3 &> /dev/null; then
    PYTHON_CMD="python3"
    PYTHON_VERSION=$(python3 --version 2>&1)
elif command -v python &> /dev/null; then
    PYTHON_CMD="python"
    PYTHON_VERSION=$(python --version 2>&1)
else
    echo "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo ""
    echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.7+:"
    if [[ "$OS" == "Linux" ]]; then
        echo "   Ubuntu/Debian: sudo apt update && sudo apt install python3 python3-pip"
        echo "   CentOS/RHEL: sudo yum install python3 python3-pip"
        echo "   Fedora: sudo dnf install python3 python3-pip"
        echo "   Arch: sudo pacman -S python python-pip"
    elif [[ "$OS" == "macOS" ]]; then
        echo "   Homebrew: brew install python3"
        echo "   –ò–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ —Å https://python.org"
    fi
    exit 1
fi

echo "‚úÖ $PYTHON_VERSION"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
PYTHON_VERSION_NUM=$($PYTHON_CMD -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')
REQUIRED_VERSION="3.7"

if [ "$(printf '%s\n' "$REQUIRED_VERSION" "$PYTHON_VERSION_NUM" | sort -V | head -n1)" != "$REQUIRED_VERSION" ]; then
    echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ, –Ω–∞–π–¥–µ–Ω $PYTHON_VERSION_NUM"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ pip..."
if ! $PYTHON_CMD -m pip --version &> /dev/null; then
    echo "‚ùå pip –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo ""
    echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pip:"
    if [[ "$OS" == "Linux" ]]; then
        echo "   Ubuntu/Debian: sudo apt install python3-pip"
        echo "   CentOS/RHEL: sudo yum install python3-pip"
    elif [[ "$OS" == "macOS" ]]; then
        echo "   pip –æ–±—ã—á–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Å Python"
        echo "   –ï—Å–ª–∏ –Ω–µ—Ç: curl https://bootstrap.pypa.io/get-pip.py | python3"
    fi
    exit 1
fi

echo "‚úÖ pip –Ω–∞–π–¥–µ–Ω"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
echo ""
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
$PYTHON_CMD -m pip install --user --upgrade pip --quiet

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
REQUIRED_FILES=("app.py" "cisco_manager.py" "requirements.txt")

for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    else
        echo "‚úÖ $file"
    fi
done

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ? (y/n): " create_venv
if [[ $create_venv =~ ^[Yy]$ ]]; then
    echo ""
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [ -d "venv" ]; then
        echo "‚ö†Ô∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
        rm -rf venv
    fi
    
    $PYTHON_CMD -m venv venv
    
    if [ $? -ne 0 ]; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
        echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å python3-venv:"
        if [[ "$OS" == "Linux" ]]; then
            echo "   Ubuntu/Debian: sudo apt install python3-venv"
        fi
        exit 1
    fi
    
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    source venv/bin/activate
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –≤ venv
    pip install --upgrade pip --quiet
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ -f "venv/bin/activate" ]; then
    source venv/bin/activate
    pip install -r requirements.txt
else
    $PYTHON_CMD -m pip install --user -r requirements.txt
fi

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
    exit 1
fi

echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo ""
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p static/css static/js templates logs backups
echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo ""
    echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
    cat > .env << EOF
DEBUG=True
SECRET_KEY=cisco-config-secret-key-2024
HOST=0.0.0.0
PORT=5000
DEFAULT_SSH_TIMEOUT=20
DEFAULT_AUTH_TIMEOUT=20
MAX_CONCURRENT_CONNECTIONS=10
EOF
    echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞
echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞..."
cat > quick_start.sh << 'EOF'
#!/bin/bash
cd "$(dirname "$0")"

if [ -f "venv/bin/activate" ]; then
    source venv/bin/activate
    python app.py
else
    python3 app.py 2>/dev/null || python app.py
fi
EOF

chmod +x quick_start.sh
echo "‚úÖ –°–∫—Ä–∏–ø—Ç quick_start.sh —Å–æ–∑–¥–∞–Ω"

# –î–µ–ª–∞–µ–º –≤—Å–µ .sh —Ñ–∞–π–ª—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
chmod +x *.sh

echo ""
echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
if [ -f "venv/bin/activate" ]; then
    echo "   ./quick_start.sh  (—Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º)"
    echo "   –∏–ª–∏:"
    echo "   source venv/bin/activate && python app.py"
else
    echo "   ./start.sh"
    echo "   –∏–ª–∏:"
    echo "   python3 app.py"
fi
echo ""
echo "üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:5000"
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md"
echo ""

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
read -p "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–µ–π—á–∞—Å? (y/n): " start_now
if [[ $start_now =~ ^[Yy]$ ]]; then
    echo ""
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    if [ -f "venv/bin/activate" ]; then
        source venv/bin/activate
    fi
    $PYTHON_CMD app.py
fi
